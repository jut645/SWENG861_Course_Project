<!-- The View for the Flight Price search results table. -->

<!-- The ViewModel for this view is the HomePageQuotesViewModel -->
@model FlightPrices.WebApp.ViewModels.Home.HomePageQuotesViewModel

@{
    ViewData["Title"] = "Flights";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Display some title information summarizing the search-->
<div class="form-group">
    <h3>
        Here's what we found for:
    </h3>
    <h6 style="font-weight:normal">
        @Model.OriginAirport &rArr; @Model.DestinationAirport
    </h6>
    <h6 style="font-weight:normal">
        <span style="font-weight:bold">Departing on:</span> @Model.DepartureDate.ToString(" dddd MMMM dd, yyyy")
    </h6>
    @if (Model.IsRoundTrip)
    {
        <h6 style="font-weight:normal">
            <span style="font-weight:bold">Returning on:</span> @Model.ReturnDate.ToString(" dddd MMMM dd, yyyy")
        </h6>
    }
</div>


<!-- This table holds the quote data -->
<table id="flights"
       class="table table-striped table-bordered"
       style="width:100%">

    <!-- Headers for the table -->      
    <thead>                                                              
        <tr>
            <!-- Departure Data Columns-->
            <th>Departure Flight #</th>
            <th>Departure Airline</th>                
            <th>Departure Time (EST)</th>             
            <th>Departure Arrival Time (EST)</th>     
            <th>Departure Trip # Stops</th>           
                            
            <!-- Return trip columns (if applicable)-->
            @if (Model.IsRoundTrip)                   
            {
                <th>Return Flight #</th>
                <th>Return Airline</th>              
                <th>Return Time (EST)</th>           
                <th>Return Arrival Time (EST) </th>   
                <th># Return Stops</th>               
            }

            <!-- Price Column Header; assumes value in USA dollars -->
            <th>Price ($)</th>                         
        </tr>
    </thead>

    <!-- This is the actual body of the table -->  
    <tbody>
                                                               
        @foreach (var quote in Model.Quotes)
        {
            <!-- Determine if the departure trip is a red-eye -->
            bool departureDifferentDays = quote.DepartureTakeoffTime.Date < quote.DepartureArrivalTime.Date;
            string departureRedEyeDisplayClass = departureDifferentDays ? "" : "none";

            <tr>
                <!-- Departure data -->
                <td>@quote.DepartureFlightNumber</td>

                <td>@quote.DepartureAirline</td> 
                
                <td data-order="@quote.DepartureTakeoffTime.TimeOfDay">
                    @quote.DepartureTakeoffTime.ToString("hh:mm tt")
                </td>  

                <td data-order="@quote.DepartureArrivalTime.TimeOfDay">
                    @quote.DepartureArrivalTime.ToString("hh:mm tt") 
                    <span style="color:red; display: @departureRedEyeDisplayClass">
                         (@quote.DepartureArrivalTime.ToString("MM/dd"))
                    </span>
                </td> 
                
                <td>@quote.DepartureStopCount</td>             

                <!-- Round trip data (if applicable) -->                                       
                @if (Model.IsRoundTrip)
                {
                    <!-- Determine if the return trip is a red-eye -->
                    bool returnDifferentDays = quote.ReturnTakeoffTime.Value.Date < quote.ReturnArrivalTime.Value.Date;
                    string returnRedEyeDisplayClass = returnDifferentDays ? "" : "none";

                    <td>@quote.ReturnFlightNumber</td>

                    <td>@quote.ReturnAirline</td>              

                    <td data-order="@quote.ReturnTakeoffTime.Value.TimeOfDay">
                        @quote.ReturnTakeoffTime.Value.ToString("hh:mm tt")
                    </td>  

                    <td data-order="@quote.ReturnArrivalTime.Value.TimeOfDay">
                        @quote.ReturnArrivalTime.Value.ToString("hh:mm tt")
                        <span style="color:red; display: @returnRedEyeDisplayClass">
                            (@quote.ReturnArrivalTime.Value.ToString("MM/dd"))
                        </span>
                    </td>  

                    <td>@quote.ReturnStopCount</td>
                }

                <!-- No cents - display as int -->
                <td>@Decimal.ToInt32(quote.Cost.Value)</td>    
            </tr>

        }
    </tbody>
</table>

@section scripts
{
    <script>

        // This JQuery function builds and configures the datatable
        $(document).ready(function() 
        {
            // 'flights' is the id of the datatable div element 
            $('#flights').DataTable(
            {
                "bInfo": false,            // Disable displaying data about the current datatable 
                "pageLength": 5,           // Set the number of rows per page to 5
                "bLengthChange": false     // Turn of the menu item for setting the number of rows per page
            });
        });

    </script>
}