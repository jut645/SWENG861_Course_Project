@model FlightPrices.WebApp.ViewModels.Map.MapIndexPageViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Airports</h1>
<div id="airport-map">


</div>


@section Scripts
{
    <script>
        const mymap = L.map('airport-map').setView([30.3322, -81.6557], 13);
        const attribution =
            "&copy; <a href=https://www.openstreetmap.org/copyright > OpenStreetMap </a> contributors";
        
        const tileUrl = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png";
        const tiles = L.tileLayer(tileUrl, { attribution });
        tiles.addTo(mymap);

        const model = @Html.Raw(Json.Serialize(Model));
        const airports = model.airports;

        let markers = []
        deleteMarkers = function ()
        {
            for (let i = 0; i < markers.length; i++)
            {
                mymap.removeLayer(markers[i]);
            }
            markers = [];
        }

        reDraw = function ()
        {
            deleteMarkers();

            let bounds = mymap.getBounds();
            for (let i = 0; i < airports.length; i++)
            {
                if (bounds.contains([airports[i].latitude, airports[i].longitude]))
                {
                    let marker = new L.marker([airports[i].latitude, airports[i].longitude]);
                    markers.push(marker);
                    mymap.addLayer(marker);
                }
            }
        }

        reDraw();
        mymap.on('zoomend dragend', function ()
        {
            reDraw();
        });

    </script>

}